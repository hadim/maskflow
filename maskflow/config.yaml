INPUT:
  # Size of the smallest side of the image during training
  MIN_SIZE_TRAIN: 128
  # Maximum size of the side of the image during training
  MAX_SIZE_TRAIN: 1333
  # Size of the smallest side of the image during testing
  MIN_SIZE_TEST: 128
  # Maximum size of the side of the image during testing
  MAX_SIZE_TEST: 1333
  # Values to be used for image normalization
  PIXEL_MEAN: [102.9801, 115.9465, 122.7717]
  # Values to be used for image normalization
  PIXEL_STD: [1., 1., 1.]
  # Convert image to BGR format (for Caffe2 models), in range 0-255
  TO_BGR255: True

MODEL:
  DEVICE: "cuda"
  WEIGHT: ""
  META_ARCHITECTURE: "GeneralizedRCNN"
  
  MASK_ON: True
  RPN_ONLY: False

  BACKBONE:
    # The backbone conv body to use among:
    # R-101-FPN, R-50-FPN and R-50-C4
    CONV_BODY: "R-50-FPN"

    # Add StopGrad at a specified stage so the bottom layers are froze
    FREEZE_CONV_BODY_AT: 2
    OUT_CHANNELS: 256

  RPN:
    USE_FPN: True
    # Base RPN anchor sizes given in absolute pixels w.r.t. the scaled network input
    ANCHOR_SIZES: [32, 64, 128, 256, 512]
    # Stride of the feature map that RPN is attached.
    # For FPN, number of strides should match number of scales
    ANCHOR_STRIDE: [4, 8, 16, 32, 64]
    # RPN anchor aspect ratios
    ASPECT_RATIOS: [0.5, 1.0, 2.0]
    # Remove RPN anchors that go outside the image by RPN_STRADDLE_THRESH pixels
    # Set to -1 or a large value, e.g. 100000, to disable pruning anchors
    STRADDLE_THRESH: 0
    # Minimum overlap required between an anchor and ground-truth box for the
    # (anchor, gt box) pair to be a positive example (IoU >= FG_IOU_THRESHOLD
    # ==> positive RPN example)
    FG_IOU_THRESHOLD: 0.7
    # Maximum overlap allowed between an anchor and ground-truth box for the
    # (anchor, gt box) pair to be a negative examples (IoU < BG_IOU_THRESHOLD
    # ==> negative RPN example)
    BG_IOU_THRESHOLD: 0.3
    # Total number of RPN examples per image
    BATCH_SIZE_PER_IMAGE: 256
    # Target fraction of foreground (positive) examples per RPN minibatch
    POSITIVE_FRACTION: 0.5
    # Number of top scoring RPN proposals to keep before applying NMS
    # When FPN is used, this is *per FPN level* (not total)
    PRE_NMS_TOP_N_TRAIN: 2000
    PRE_NMS_TOP_N_TEST: 1000
    # Number of top scoring RPN proposals to keep after applying NMS
    POST_NMS_TOP_N_TRAIN: 1000
    POST_NMS_TOP_N_TEST: 1000
    # NMS threshold used on RPN proposals
    NMS_THRESH: 0.7
    # Proposal height and width both need to be greater than RPN_MIN_SIZE
    # (a the scale used during training or inference)
    MIN_SIZE: 0
    # Number of top scoring RPN proposals to keep after combining proposals from
    # all FPN levels
    FPN_POST_NMS_TOP_N_TRAIN: 2000
    FPN_POST_NMS_TOP_N_TEST: 1000

  ROI_HEADS:
    USE_FPN: True
    # Overlap threshold for an RoI to be considered foreground (if >= FG_IOU_THRESHOLD)
    IOU_THRESHOLD: 0.5
    # Overlap threshold for an RoI to be considered background
    # (class = 0 if overlap in [0, BG_IOU_THRESHOLD))
    BG_IOU_THRESHOLD: 0.5
    # Default weights on (dx, dy, dw, dh) for normalizing bbox regression targets
    # These are empirically chosen to approximately lead to unit variance targets
    BBOX_REG_WEIGHTS: [10., 10., 5., 5.]
    # RoI minibatch size *per image* (number of regions of interest [ROIs])
    # Total number of RoIs per training minibatch =
    #   TRAIN.BATCH_SIZE_PER_IM * TRAIN.IMS_PER_BATCH * NUM_GPUS
    # E.g., a common configuration is: 512 * 2 * 8 = 8192
    BATCH_SIZE_PER_IMAGE: 512
    # Target fraction of RoI minibatch that is labeled foreground (i.e. class > 0)
    POSITIVE_FRACTION: 0.25

    # Only used on test mode

    # Minimum score threshold (assuming scores in a [0, 1] range); a value chosen to
    # balance obtaining high recall with not having too many low precision
    # detections that will slow down inference post processing steps (like NMS)
    SCORE_THRESH: 0.05
    # Overlap threshold used for non-maximum suppression (suppress boxes with
    # IoU >= this threshold)
    NMS: 0.5
    # Maximum number of detections to return per image (100 is based on the limit
    # established for the COCO dataset)
    DETECTIONS_PER_IMG: 100

  ROI_BOX_HEAD:
    FEATURE_EXTRACTOR : "FPN2MLPFeatureExtractor"
    PREDICTOR : "FPNPredictor"
    POOLER_RESOLUTION : 7
    POOLER_SAMPLING_RATIO : 2
    POOLER_SCALES : [0.25, 0.125, 0.0625, 0.03125]
    # NUM_CLASSES must include the background class. Its id is 0.
    NUM_CLASSES : 2
    # Hidden layer dimension when using an MLP for the RoI box head
    MLP_HEAD_DIM: 1024
    PREDICTOR: "FPNPredictor"

  ROI_MASK_HEAD:
    FEATURE_EXTRACTOR: "MaskRCNNFPNFeatureExtractor"
    PREDICTOR: "MaskRCNNC4Predictor"
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 2
    POOLER_SCALES: [0.25, 0.125, 0.0625, 0.03125]
    MLP_HEAD_DIM: 1024
    CONV_LAYERS: [256, 256, 256, 256]
    RESOLUTION: 28
    SHARE_BOX_FEATURE_EXTRACTOR: False

DATALOADER:
  SIZE_DIVISIBILITY: 32
  NUM_WORKERS: 1

SOLVER:
  MAX_ITER: 90000
  BASE_LR: 0.02
  WEIGHT_DECAY: 0.0001
  STEPS: [60000, 80000]
  BIAS_LR_FACTOR: 2
  MOMENTUM: 0.9
  WEIGHT_DECAY_BIAS: 0
  GAMMA: 0.1
  CHECKPOINT_PERIOD: 2500
  WARMUP_FACTOR: 0.33
  WARMUP_ITERS: 500
  WARMUP_METHOD: "linear"
  # Number of images per batch
  # This is global, so if we have 8 GPUs and IMS_PER_BATCH = 16, each GPU will
  # see 2 images per batch
  IMS_PER_BATCH: 1

TEST:
  IMS_PER_BATCH: 1

OUTPUT_DIR: "."
PATHS_CATALOG: "."

DATASETS:
  TRAIN: ['train_dataset']
  TEST: ['test_dataset']